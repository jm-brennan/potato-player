GLUTCREATESUBWINDOW(3)           Local Manual           GLUTCREATESUBWINDOW(3)

[1mNAME[0m
     [1mglutCreateSubWindow [22m-- Create a subwindow

[1mLIBRARY[0m
     OpenGLUT - window

[1mSYNOPSIS[0m
     [1m#include <openglut.h>[0m

     [4mint[0m
     [1mglutCreateSubWindow[22m([4mint[24m [4mparentID[24m, [4mint[24m [4mx[24m, [4mint[24m [4my[24m, [4mint[24m [4mw[24m, [4mint[24m [4mh[24m);

[1mPARAMETERS[0m
      [4mparentID[24m    Parent window identifier

      [4mx[24m           Horizontal position of subwindow

      [4my[24m           Vertical position of subwindow

      [4mw[24m           Width of subwindow

      [4mh[24m           Height of subwindow

[1mDESCRIPTION[0m
     In almost every regard that is important to you, a subwindow is like a
     top-level window.  It has a window id; it has its own set of event call-
     backs; you can render to it; you are notified of its creation; ...

     A subwindow lives inside of some other window (possibly a top-level win-
     dow, possibly another subwindow).  Because of this, it generally only in-
     teracts with other windows of your own creation, hence it is not sub-
     jected to a window manager.  This is the primary source for its differ-
     ences from a top-level window:

      - There are no borders or decorations.
      - There is no title bar, hence no title.
      - Requests tend to be acted on a little more directly, without interfer-
     ence from a window manager.
      - The subwindow inherits the display mode of its parent.

     Like a top-level window, you  [4mmust[24m   register a display callback function
     if you wish to use glutMainloop().

     A notable case where this function can fail is for offscreen windows.  A
     coherent concept of a subwindow of an offscreen window would introduce
     more complication than is presently believed to be worthwhile.  Attempt-
     ing such a window presently just fails.  Failure is denoted by a 0  win-
     dow id   being returned.

     Subwindows can be very useful for partitioning a window into GUI ele-
     ments: They have their own input callbacks, so you don't have to figure
     out which window an event is for.  Graphics are clipped to the boundaries
     of your subwindows, so you do not need to worry much about where your
     drawing goes.  Because windows and subwindows work almost identically
     from the perspective of a GLUT program, it is relatively easy to move a
     cluster of related controls into a separate top-level window---or, con-
     versely, embed what was a top-level window inside of another window.
     OpenGLUT can also report some basic statistics about your (sub)window,
     relieving you of the duty of tracking all of that information for your-
     self.

[1mSEE ALSO[0m
     glutCreateWindow(3) glutDestroyWindow(3) glutCreateMenuWindow(3)


                                     Epoch
