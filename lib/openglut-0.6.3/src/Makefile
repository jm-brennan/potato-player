# Makefile.in generated by automake 1.9.2 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




SOURCES = $(libopenglut_la_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/openglut
pkglibdir = $(libdir)/openglut
pkgincludedir = $(includedir)/openglut
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libopenglut_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_libopenglut_la_OBJECTS = libopenglut_la-og_callbacks.lo \
	libopenglut_la-og_cursor.lo libopenglut_la-og_display.lo \
	libopenglut_la-og_ext.lo libopenglut_la-og_font.lo \
	libopenglut_la-og_font_data.lo \
	libopenglut_la-og_stroke_roman.lo \
	libopenglut_la-og_stroke_mono_roman.lo \
	libopenglut_la-og_gamemode.lo libopenglut_la-og_geometry.lo \
	libopenglut_la-og_init.lo libopenglut_la-og_joystick.lo \
	libopenglut_la-og_main.lo libopenglut_la-og_menu.lo \
	libopenglut_la-og_misc.lo libopenglut_la-og_overlay.lo \
	libopenglut_la-og_state.lo libopenglut_la-og_structure.lo \
	libopenglut_la-og_teapot.lo libopenglut_la-og_videoresize.lo \
	libopenglut_la-og_window.lo
libopenglut_la_OBJECTS = $(am_libopenglut_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link --tag=CC $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libopenglut_la_SOURCES)
DIST_SOURCES = $(libopenglut_la_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jacob/src/potato-player/lib/openglut-0.6.3/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/jacob/src/potato-player/lib/openglut-0.6.3/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/jacob/src/potato-player/lib/openglut-0.6.3/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jacob/src/potato-player/lib/openglut-0.6.3/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jacob/src/potato-player/lib/openglut-0.6.3/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -w
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = gfortran
FFLAGS = -g -O2
HEADER = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBM = -lm
LIBOBJS = 
LIBRARY = openglut
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = ./ltmain.sh
LIBXXF86VM = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/jacob/src/potato-player/lib/openglut-0.6.3/missing --run makeinfo
OBJEXT = o
OG_EXTRA_BUILD = 
PACKAGE = openglut
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.6.3
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = gfortran
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/jacob/src/potato-player/lib/openglut-0.6.3/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

#
# The library we want to build
#
lib_LTLIBRARIES = libopenglut.la
noinst_HEADERS = og_internal.h
#
# Those source files build the OpenGLUT library
#
libopenglut_la_SOURCES = og_callbacks.c \
			 og_cursor.c \
			 og_display.c \
			 og_ext.c \
			 og_font.c \
			 og_font_data.c \
			 og_stroke_roman.c \
			 og_stroke_mono_roman.c \
			 og_gamemode.c \
			 og_geometry.c \
			 og_init.c \
			 og_joystick.c \
			 og_main.c \
			 og_menu.c \
			 og_misc.c \
			 og_overlay.c \
			 og_state.c \
			 og_structure.c \
			 og_teapot.c \
			 og_videoresize.c \
			 og_window.c


# The above list has had this file excised as obsolete:
#			 og_glutfont_definitions.c \
#

#
# Additional linker flags
#	 
libopenglut_la_LIBADD = $(LIBM) $(X_LIBS) -lGL -lGLU -lXext -lX11 $(LIBXXF86VM)
libopenglut_la_LDFLAGS = -version-info 1:0:0
libopenglut_la_CFLAGS = $(X_CFLAGS)
INCLUDES = -I../include
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libopenglut.la: $(libopenglut_la_OBJECTS) $(libopenglut_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libopenglut_la_LDFLAGS) $(libopenglut_la_OBJECTS) $(libopenglut_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libopenglut_la-og_callbacks.Plo
include ./$(DEPDIR)/libopenglut_la-og_cursor.Plo
include ./$(DEPDIR)/libopenglut_la-og_display.Plo
include ./$(DEPDIR)/libopenglut_la-og_ext.Plo
include ./$(DEPDIR)/libopenglut_la-og_font.Plo
include ./$(DEPDIR)/libopenglut_la-og_font_data.Plo
include ./$(DEPDIR)/libopenglut_la-og_gamemode.Plo
include ./$(DEPDIR)/libopenglut_la-og_geometry.Plo
include ./$(DEPDIR)/libopenglut_la-og_init.Plo
include ./$(DEPDIR)/libopenglut_la-og_joystick.Plo
include ./$(DEPDIR)/libopenglut_la-og_main.Plo
include ./$(DEPDIR)/libopenglut_la-og_menu.Plo
include ./$(DEPDIR)/libopenglut_la-og_misc.Plo
include ./$(DEPDIR)/libopenglut_la-og_overlay.Plo
include ./$(DEPDIR)/libopenglut_la-og_state.Plo
include ./$(DEPDIR)/libopenglut_la-og_stroke_mono_roman.Plo
include ./$(DEPDIR)/libopenglut_la-og_stroke_roman.Plo
include ./$(DEPDIR)/libopenglut_la-og_structure.Plo
include ./$(DEPDIR)/libopenglut_la-og_teapot.Plo
include ./$(DEPDIR)/libopenglut_la-og_videoresize.Plo
include ./$(DEPDIR)/libopenglut_la-og_window.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libopenglut_la-og_callbacks.lo: og_callbacks.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_callbacks.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_callbacks.Tpo" -c -o libopenglut_la-og_callbacks.lo `test -f 'og_callbacks.c' || echo '$(srcdir)/'`og_callbacks.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_callbacks.Tpo" "$(DEPDIR)/libopenglut_la-og_callbacks.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_callbacks.Tpo"; exit 1; fi
#	source='og_callbacks.c' object='libopenglut_la-og_callbacks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_callbacks.lo `test -f 'og_callbacks.c' || echo '$(srcdir)/'`og_callbacks.c

libopenglut_la-og_cursor.lo: og_cursor.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_cursor.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_cursor.Tpo" -c -o libopenglut_la-og_cursor.lo `test -f 'og_cursor.c' || echo '$(srcdir)/'`og_cursor.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_cursor.Tpo" "$(DEPDIR)/libopenglut_la-og_cursor.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_cursor.Tpo"; exit 1; fi
#	source='og_cursor.c' object='libopenglut_la-og_cursor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_cursor.lo `test -f 'og_cursor.c' || echo '$(srcdir)/'`og_cursor.c

libopenglut_la-og_display.lo: og_display.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_display.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_display.Tpo" -c -o libopenglut_la-og_display.lo `test -f 'og_display.c' || echo '$(srcdir)/'`og_display.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_display.Tpo" "$(DEPDIR)/libopenglut_la-og_display.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_display.Tpo"; exit 1; fi
#	source='og_display.c' object='libopenglut_la-og_display.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_display.lo `test -f 'og_display.c' || echo '$(srcdir)/'`og_display.c

libopenglut_la-og_ext.lo: og_ext.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_ext.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_ext.Tpo" -c -o libopenglut_la-og_ext.lo `test -f 'og_ext.c' || echo '$(srcdir)/'`og_ext.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_ext.Tpo" "$(DEPDIR)/libopenglut_la-og_ext.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_ext.Tpo"; exit 1; fi
#	source='og_ext.c' object='libopenglut_la-og_ext.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_ext.lo `test -f 'og_ext.c' || echo '$(srcdir)/'`og_ext.c

libopenglut_la-og_font.lo: og_font.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_font.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_font.Tpo" -c -o libopenglut_la-og_font.lo `test -f 'og_font.c' || echo '$(srcdir)/'`og_font.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_font.Tpo" "$(DEPDIR)/libopenglut_la-og_font.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_font.Tpo"; exit 1; fi
#	source='og_font.c' object='libopenglut_la-og_font.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_font.lo `test -f 'og_font.c' || echo '$(srcdir)/'`og_font.c

libopenglut_la-og_font_data.lo: og_font_data.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_font_data.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_font_data.Tpo" -c -o libopenglut_la-og_font_data.lo `test -f 'og_font_data.c' || echo '$(srcdir)/'`og_font_data.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_font_data.Tpo" "$(DEPDIR)/libopenglut_la-og_font_data.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_font_data.Tpo"; exit 1; fi
#	source='og_font_data.c' object='libopenglut_la-og_font_data.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_font_data.lo `test -f 'og_font_data.c' || echo '$(srcdir)/'`og_font_data.c

libopenglut_la-og_stroke_roman.lo: og_stroke_roman.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_stroke_roman.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_stroke_roman.Tpo" -c -o libopenglut_la-og_stroke_roman.lo `test -f 'og_stroke_roman.c' || echo '$(srcdir)/'`og_stroke_roman.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_stroke_roman.Tpo" "$(DEPDIR)/libopenglut_la-og_stroke_roman.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_stroke_roman.Tpo"; exit 1; fi
#	source='og_stroke_roman.c' object='libopenglut_la-og_stroke_roman.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_stroke_roman.lo `test -f 'og_stroke_roman.c' || echo '$(srcdir)/'`og_stroke_roman.c

libopenglut_la-og_stroke_mono_roman.lo: og_stroke_mono_roman.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_stroke_mono_roman.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_stroke_mono_roman.Tpo" -c -o libopenglut_la-og_stroke_mono_roman.lo `test -f 'og_stroke_mono_roman.c' || echo '$(srcdir)/'`og_stroke_mono_roman.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_stroke_mono_roman.Tpo" "$(DEPDIR)/libopenglut_la-og_stroke_mono_roman.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_stroke_mono_roman.Tpo"; exit 1; fi
#	source='og_stroke_mono_roman.c' object='libopenglut_la-og_stroke_mono_roman.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_stroke_mono_roman.lo `test -f 'og_stroke_mono_roman.c' || echo '$(srcdir)/'`og_stroke_mono_roman.c

libopenglut_la-og_gamemode.lo: og_gamemode.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_gamemode.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_gamemode.Tpo" -c -o libopenglut_la-og_gamemode.lo `test -f 'og_gamemode.c' || echo '$(srcdir)/'`og_gamemode.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_gamemode.Tpo" "$(DEPDIR)/libopenglut_la-og_gamemode.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_gamemode.Tpo"; exit 1; fi
#	source='og_gamemode.c' object='libopenglut_la-og_gamemode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_gamemode.lo `test -f 'og_gamemode.c' || echo '$(srcdir)/'`og_gamemode.c

libopenglut_la-og_geometry.lo: og_geometry.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_geometry.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_geometry.Tpo" -c -o libopenglut_la-og_geometry.lo `test -f 'og_geometry.c' || echo '$(srcdir)/'`og_geometry.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_geometry.Tpo" "$(DEPDIR)/libopenglut_la-og_geometry.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_geometry.Tpo"; exit 1; fi
#	source='og_geometry.c' object='libopenglut_la-og_geometry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_geometry.lo `test -f 'og_geometry.c' || echo '$(srcdir)/'`og_geometry.c

libopenglut_la-og_init.lo: og_init.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_init.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_init.Tpo" -c -o libopenglut_la-og_init.lo `test -f 'og_init.c' || echo '$(srcdir)/'`og_init.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_init.Tpo" "$(DEPDIR)/libopenglut_la-og_init.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_init.Tpo"; exit 1; fi
#	source='og_init.c' object='libopenglut_la-og_init.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_init.lo `test -f 'og_init.c' || echo '$(srcdir)/'`og_init.c

libopenglut_la-og_joystick.lo: og_joystick.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_joystick.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_joystick.Tpo" -c -o libopenglut_la-og_joystick.lo `test -f 'og_joystick.c' || echo '$(srcdir)/'`og_joystick.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_joystick.Tpo" "$(DEPDIR)/libopenglut_la-og_joystick.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_joystick.Tpo"; exit 1; fi
#	source='og_joystick.c' object='libopenglut_la-og_joystick.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_joystick.lo `test -f 'og_joystick.c' || echo '$(srcdir)/'`og_joystick.c

libopenglut_la-og_main.lo: og_main.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_main.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_main.Tpo" -c -o libopenglut_la-og_main.lo `test -f 'og_main.c' || echo '$(srcdir)/'`og_main.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_main.Tpo" "$(DEPDIR)/libopenglut_la-og_main.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_main.Tpo"; exit 1; fi
#	source='og_main.c' object='libopenglut_la-og_main.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_main.lo `test -f 'og_main.c' || echo '$(srcdir)/'`og_main.c

libopenglut_la-og_menu.lo: og_menu.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_menu.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_menu.Tpo" -c -o libopenglut_la-og_menu.lo `test -f 'og_menu.c' || echo '$(srcdir)/'`og_menu.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_menu.Tpo" "$(DEPDIR)/libopenglut_la-og_menu.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_menu.Tpo"; exit 1; fi
#	source='og_menu.c' object='libopenglut_la-og_menu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_menu.lo `test -f 'og_menu.c' || echo '$(srcdir)/'`og_menu.c

libopenglut_la-og_misc.lo: og_misc.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_misc.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_misc.Tpo" -c -o libopenglut_la-og_misc.lo `test -f 'og_misc.c' || echo '$(srcdir)/'`og_misc.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_misc.Tpo" "$(DEPDIR)/libopenglut_la-og_misc.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_misc.Tpo"; exit 1; fi
#	source='og_misc.c' object='libopenglut_la-og_misc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_misc.lo `test -f 'og_misc.c' || echo '$(srcdir)/'`og_misc.c

libopenglut_la-og_overlay.lo: og_overlay.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_overlay.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_overlay.Tpo" -c -o libopenglut_la-og_overlay.lo `test -f 'og_overlay.c' || echo '$(srcdir)/'`og_overlay.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_overlay.Tpo" "$(DEPDIR)/libopenglut_la-og_overlay.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_overlay.Tpo"; exit 1; fi
#	source='og_overlay.c' object='libopenglut_la-og_overlay.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_overlay.lo `test -f 'og_overlay.c' || echo '$(srcdir)/'`og_overlay.c

libopenglut_la-og_state.lo: og_state.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_state.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_state.Tpo" -c -o libopenglut_la-og_state.lo `test -f 'og_state.c' || echo '$(srcdir)/'`og_state.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_state.Tpo" "$(DEPDIR)/libopenglut_la-og_state.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_state.Tpo"; exit 1; fi
#	source='og_state.c' object='libopenglut_la-og_state.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_state.lo `test -f 'og_state.c' || echo '$(srcdir)/'`og_state.c

libopenglut_la-og_structure.lo: og_structure.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_structure.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_structure.Tpo" -c -o libopenglut_la-og_structure.lo `test -f 'og_structure.c' || echo '$(srcdir)/'`og_structure.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_structure.Tpo" "$(DEPDIR)/libopenglut_la-og_structure.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_structure.Tpo"; exit 1; fi
#	source='og_structure.c' object='libopenglut_la-og_structure.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_structure.lo `test -f 'og_structure.c' || echo '$(srcdir)/'`og_structure.c

libopenglut_la-og_teapot.lo: og_teapot.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_teapot.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_teapot.Tpo" -c -o libopenglut_la-og_teapot.lo `test -f 'og_teapot.c' || echo '$(srcdir)/'`og_teapot.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_teapot.Tpo" "$(DEPDIR)/libopenglut_la-og_teapot.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_teapot.Tpo"; exit 1; fi
#	source='og_teapot.c' object='libopenglut_la-og_teapot.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_teapot.lo `test -f 'og_teapot.c' || echo '$(srcdir)/'`og_teapot.c

libopenglut_la-og_videoresize.lo: og_videoresize.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_videoresize.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_videoresize.Tpo" -c -o libopenglut_la-og_videoresize.lo `test -f 'og_videoresize.c' || echo '$(srcdir)/'`og_videoresize.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_videoresize.Tpo" "$(DEPDIR)/libopenglut_la-og_videoresize.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_videoresize.Tpo"; exit 1; fi
#	source='og_videoresize.c' object='libopenglut_la-og_videoresize.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_videoresize.lo `test -f 'og_videoresize.c' || echo '$(srcdir)/'`og_videoresize.c

libopenglut_la-og_window.lo: og_window.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -MT libopenglut_la-og_window.lo -MD -MP -MF "$(DEPDIR)/libopenglut_la-og_window.Tpo" -c -o libopenglut_la-og_window.lo `test -f 'og_window.c' || echo '$(srcdir)/'`og_window.c; \
	then mv -f "$(DEPDIR)/libopenglut_la-og_window.Tpo" "$(DEPDIR)/libopenglut_la-og_window.Plo"; else rm -f "$(DEPDIR)/libopenglut_la-og_window.Tpo"; exit 1; fi
#	source='og_window.c' object='libopenglut_la-og_window.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopenglut_la_CFLAGS) $(CFLAGS) -c -o libopenglut_la-og_window.lo `test -f 'og_window.c' || echo '$(srcdir)/'`og_window.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
